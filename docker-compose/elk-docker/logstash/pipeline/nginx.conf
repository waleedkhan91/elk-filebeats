input {
    beats {
        port => 5000
    }
}

filter {
      grok {
        match => { "message" => [ "\"%{HTTPDATE:timestamp}\" \|\| client=%{IP:remote_ip} \|\| method=%{WORD:main_method} request=\"%{WORD:http_method} %{DATA:url}\?%{GREEDYDATA:uri_query} HTTP/%{NUMBER:http_version}\" \|\| request_length=%{NUMBER:request_length} \|\| status=%{NUMBER:status} \|\| bytes_sent=%{NUMBER:bytes_sent} \|\| body_bytes_sent=%{NUMBER:body_bytes_sent} \|\| referer=%{DATA:referer} \|\| user_agent=\"%{DATA:user_agent}\" \|\| upstream_addr=%{IP:upstream_ip}:%{NUMBER:upstream_port} \|\| upstream_status=%{DATA:upstream_status} \|\| request_time=%{NUMBER:request_time} \|\| upstream_response_time=%{NUMBER:request_response_time} \|\| upstream_connect_time=%{NUMBER:request_connect_time} \|\| upstream_header_time=%{DATA:request_header_time}",
                   "\"%{HTTPDATE:timestamp}\" \|\| client=%{IP:remote_ip} \|\| method=%{WORD:main_method} request=\"%{WORD:http_method} %{DATA:url}/%{NUMBER:msisdn}/%{WORD:version} HTTP/%{NUMBER:http_version}\" \|\| request_length=%{NUMBER:request_length} \|\| status=%{NUMBER:status} \|\| bytes_sent=%{NUMBER:bytes_sent} \|\| body_bytes_sent=%{NUMBER:body_bytes_sent} \|\| referer=%{DATA:referer} \|\| user_agent=\"%{DATA:user_agent}\" \|\| upstream_addr=%{IP:upstream_ip}:%{NUMBER:upstream_port} \|\| upstream_status=%{DATA:upstream_status} \|\| request_time=%{NUMBER:request_time} \|\| upstream_response_time=%{NUMBER:request_response_time} \|\| upstream_connect_time=%{NUMBER:request_connect_time} \|\| upstream_header_time=%{DATA:request_header_time}",
                   "\"%{HTTPDATE:timestamp}\" \|\| client=%{IP:remote_ip} \|\| method=%{WORD:main_method} request=\"%{WORD:http_method} %{DATA:url}/%{NUMBER:msisdn} HTTP/%{NUMBER:http_version}\" \|\| request_length=%{NUMBER:request_length} \|\| status=%{NUMBER:status} \|\| bytes_sent=%{NUMBER:bytes_sent} \|\| body_bytes_sent=%{NUMBER:body_bytes_sent} \|\| referer=%{DATA:referer} \|\| user_agent=\"%{DATA:user_agent}\" \|\| upstream_addr=%{IP:upstream_ip}:%{NUMBER:upstream_port} \|\| upstream_status=%{DATA:upstream_status} \|\| request_time=%{NUMBER:request_time} \|\| upstream_response_time=%{NUMBER:request_response_time} \|\| upstream_connect_time=%{NUMBER:request_connect_time} \|\| upstream_header_time=%{DATA:request_header_time}",
                   "\"%{HTTPDATE:timestamp}\" \|\| client=%{IP:remote_ip} \|\| method=%{WORD:main_method} request=\"%{WORD:http_method} %{DATA:url} HTTP/%{NUMBER:http_version}\" \|\| request_length=%{NUMBER:request_length} \|\| status=%{NUMBER:status} \|\| bytes_sent=%{NUMBER:bytes_sent} \|\| body_bytes_sent=%{NUMBER:body_bytes_sent} \|\| referer=%{DATA:referer} \|\| user_agent=\"%{DATA:user_agent}\" \|\| upstream_addr=%{IP:upstream_ip}:%{NUMBER:upstream_port} \|\| upstream_status=%{DATA:upstream_status} \|\| request_time=%{NUMBER:request_time} \|\| upstream_response_time=%{NUMBER:request_response_time} \|\| upstream_connect_time=%{NUMBER:request_connect_time} \|\| upstream_header_time=%{DATA:request_header_time}",
                   "\"%{HTTPDATE:timestamp}\" \|\| client=%{IP:remote_ip} \|\| method=%{WORD:main_method} request=\"%{WORD:http_method} %{DATA:url} HTTP/%{NUMBER:http_version}\" \|\| request_length=%{NUMBER:request_length} \|\| status=%{NUMBER:status} \|\| bytes_sent=%{NUMBER:bytes_sent} \|\| body_bytes_sent=%{NUMBER:body_bytes_sent} \|\| referer=%{DATA:referer} \|\| user_agent=\"%{DATA:user_agent}\" \|\| upstream_addr=%{DATA:upstream_ip} \|\| upstream_status=%{DATA:upstream_status} \|\| request_time=%{DATA:request_time} \|\| upstream_response_time=%{DATA:request_response_time} \|\| upstream_connect_time=%{DATA:request_connect_time} \|\| upstream_header_time=%{DATA:request_header_time}" ] }
          }
    }

output {
 elasticsearch {
   hosts => ["http://elasticsearch:9200"]
   index => "nginx-%{+YYYY.MM.dd}"
   document_type => "nginx_logs"
   user     => "elastic"
   password => "changeme"
 }
 stdout { codec => rubydebug }
}
